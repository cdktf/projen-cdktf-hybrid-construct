// generated by cdktf get
// terraform-aws-modules/eks/aws
import { TerraformModule, TerraformModuleUserOptions } from 'cdktf';
import { Construct } from 'constructs';
export interface EksOptions extends TerraformModuleUserOptions {
  /**
   * Indicates whether or not to attach an additional policy for the cluster IAM role to utilize the encryption key provided
   * @default true
   */
  readonly attachClusterEncryptionPolicy?: boolean;
  /**
   * List of account maps to add to the aws-auth configmap
   * @default 
   */
  readonly awsAuthAccounts?: any[];
  /**
   * List of Fargate profile pod execution role ARNs to add to the aws-auth configmap
   * @default 
   */
  readonly awsAuthFargateProfilePodExecutionRoleArns?: string[];
  /**
   * List of non-Windows based node IAM role ARNs to add to the aws-auth configmap
   * @default 
   */
  readonly awsAuthNodeIamRoleArnsNonWindows?: string[];
  /**
   * List of Windows based node IAM role ARNs to add to the aws-auth configmap
   * @default 
   */
  readonly awsAuthNodeIamRoleArnsWindows?: string[];
  /**
   * List of role maps to add to the aws-auth configmap
   * @default 
   */
  readonly awsAuthRoles?: any[];
  /**
   * List of user maps to add to the aws-auth configmap
   * @default 
   */
  readonly awsAuthUsers?: any[];
  /**
   * If a KMS Key ARN is set, this key will be used to encrypt the corresponding log group. Please be sure that the KMS Key has an appropriate key policy (https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/encrypt-log-data-kms.html)
   */
  readonly cloudwatchLogGroupKmsKeyId?: string;
  /**
   * Number of days to retain log events. Default retention - 90 days
   * @default 90
   */
  readonly cloudwatchLogGroupRetentionInDays?: number;
  /**
   * List of additional, externally created security group IDs to attach to the cluster control plane
   * @default 
   */
  readonly clusterAdditionalSecurityGroupIds?: string[];
  /**
   * Map of cluster addon configurations to enable for the cluster. Addon name can be the map keys or set with `name`
   * @default [object Object]
   */
  readonly clusterAddons?: any;
  /**
   * A list of the desired control plane logs to enable. For more information, see Amazon EKS Control Plane Logging documentation (https://docs.aws.amazon.com/eks/latest/userguide/control-plane-logs.html)
   * @default audit,api,authenticator
   */
  readonly clusterEnabledLogTypes?: string[];
  /**
   * Configuration block with encryption configuration for the cluster
   * @default 
   */
  readonly clusterEncryptionConfig?: any[];
  /**
   * Description of the cluster encryption policy created
   * @default Cluster encryption policy to allow cluster role to utilize CMK provided
   */
  readonly clusterEncryptionPolicyDescription?: string;
  /**
   * Name to use on cluster encryption policy created
   */
  readonly clusterEncryptionPolicyName?: string;
  /**
   * Cluster encryption policy path
   */
  readonly clusterEncryptionPolicyPath?: string;
  /**
   * A map of additional tags to add to the cluster encryption policy created
   * @default [object Object]
   * The property type contains a map, they have special handling, please see {@link cdk.tf/module-map-inputs the docs}
   */
  readonly clusterEncryptionPolicyTags?: { [key: string]: string };
  /**
   * Determines whether cluster encryption policy name (`cluster_encryption_policy_name`) is used as a prefix
   * @default true
   */
  readonly clusterEncryptionPolicyUseNamePrefix?: boolean;
  /**
   * Indicates whether or not the Amazon EKS private API server endpoint is enabled
   */
  readonly clusterEndpointPrivateAccess?: boolean;
  /**
   * Indicates whether or not the Amazon EKS public API server endpoint is enabled
   * @default true
   */
  readonly clusterEndpointPublicAccess?: boolean;
  /**
   * List of CIDR blocks which can access the Amazon EKS public API server endpoint
   * @default 0.0.0.0/0
   */
  readonly clusterEndpointPublicAccessCidrs?: string[];
  /**
   * Base DNS domain name for the current partition (e.g., amazonaws.com in AWS Commercial, amazonaws.com.cn in AWS China)
   */
  readonly clusterIamRoleDnsSuffix?: string;
  /**
   * Map of cluster identity provider configurations to enable for the cluster. Note - this is different/separate from IRSA
   * @default [object Object]
   */
  readonly clusterIdentityProviders?: any;
  /**
   * The IP family used to assign Kubernetes pod and service addresses. Valid values are `ipv4` (default) and `ipv6`. You can only specify an IP family when you create a cluster, changing this value will force a new cluster to be created
   */
  readonly clusterIpFamily?: string;
  /**
   * Name of the EKS cluster
   */
  readonly clusterName?: string;
  /**
   * List of additional security group rules to add to the cluster security group created. Set `source_node_security_group = true` inside rules to set the `node_security_group` as source
   * @default [object Object]
   */
  readonly clusterSecurityGroupAdditionalRules?: any;
  /**
   * Description of the cluster security group created
   * @default EKS cluster security group
   */
  readonly clusterSecurityGroupDescription?: string;
  /**
   * Existing security group ID to be attached to the cluster. Required if `create_cluster_security_group` = `false`
   */
  readonly clusterSecurityGroupId?: string;
  /**
   * Name to use on cluster security group created
   */
  readonly clusterSecurityGroupName?: string;
  /**
   * A map of additional tags to add to the cluster security group created
   * @default [object Object]
   * The property type contains a map, they have special handling, please see {@link cdk.tf/module-map-inputs the docs}
   */
  readonly clusterSecurityGroupTags?: { [key: string]: string };
  /**
   * Determines whether cluster security group name (`cluster_security_group_name`) is used as a prefix
   * @default true
   */
  readonly clusterSecurityGroupUseNamePrefix?: boolean;
  /**
   * The CIDR block to assign Kubernetes service IP addresses from. If you don't specify a block, Kubernetes assigns addresses from either the 10.100.0.0/16 or 172.20.0.0/16 CIDR blocks
   */
  readonly clusterServiceIpv4Cidr?: string;
  /**
   * A map of additional tags to add to the cluster
   * @default [object Object]
   * The property type contains a map, they have special handling, please see {@link cdk.tf/module-map-inputs the docs}
   */
  readonly clusterTags?: { [key: string]: string };
  /**
   * Create, update, and delete timeout configurations for the cluster
   * @default [object Object]
   * The property type contains a map, they have special handling, please see {@link cdk.tf/module-map-inputs the docs}
   */
  readonly clusterTimeouts?: { [key: string]: string };
  /**
   * Kubernetes `<major>.<minor>` version to use for the EKS cluster (i.e.: `1.22`)
   */
  readonly clusterVersion?: string;
  /**
   * A list of subnet IDs where the EKS cluster control plane (ENIs) will be provisioned. Used for expanding the pool of subnets used by nodes/node groups without replacing the EKS control plane
   * @default 
   */
  readonly controlPlaneSubnetIds?: string[];
  /**
   * Controls if EKS resources should be created (affects nearly all resources)
   * @default true
   */
  readonly create?: boolean;
  /**
   * Determines whether to create the aws-auth configmap. NOTE - this is only intended for scenarios where the configmap does not exist (i.e. - when using only self-managed node groups). Most users should use `manage_aws_auth_configmap`
   */
  readonly createAwsAuthConfigmap?: boolean;
  /**
   * Determines whether a log group is created by this module for the cluster logs. If not, AWS will automatically create one if logging is enabled
   * @default true
   */
  readonly createCloudwatchLogGroup?: boolean;
  /**
   * Indicates whether or not to tag the cluster's primary security group. This security group is created by the EKS service, not the module, and therefore tagging is handled after cluster creation
   * @default true
   */
  readonly createClusterPrimarySecurityGroupTags?: boolean;
  /**
   * Determines if a security group is created for the cluster or use the existing `cluster_security_group_id`
   * @default true
   */
  readonly createClusterSecurityGroup?: boolean;
  /**
   * Determines whether to create an [`AmazonEKS_CNI_IPv6_Policy`](https://docs.aws.amazon.com/eks/latest/userguide/cni-iam-role.html#cni-iam-role-create-ipv6-policy)
   */
  readonly createCniIpv6IamPolicy?: boolean;
  /**
   * Determines whether a an IAM role is created or to use an existing IAM role
   * @default true
   */
  readonly createIamRole?: boolean;
  /**
   * Controls if a KMS key for cluster encryption should be created
   */
  readonly createKmsKey?: boolean;
  /**
   * Determines whether to create a security group for the node groups or use the existing `node_security_group_id`
   * @default true
   */
  readonly createNodeSecurityGroup?: boolean;
  /**
   * Additional list of server certificate thumbprints for the OpenID Connect (OIDC) identity provider's server certificate(s)
   * @default 
   */
  readonly customOidcThumbprints?: string[];
  /**
   * Map of EKS managed node group default configurations
   * @default [object Object]
   */
  readonly eksManagedNodeGroupDefaults?: any;
  /**
   * Map of EKS managed node group definitions to create
   * @default [object Object]
   */
  readonly eksManagedNodeGroups?: any;
  /**
   * Determines whether to create an OpenID Connect Provider for EKS to enable IRSA
   * @default true
   */
  readonly enableIrsa?: boolean;
  /**
   * Specifies whether key rotation is enabled. Defaults to `true`
   * @default true
   */
  readonly enableKmsKeyRotation?: boolean;
  /**
   * Map of Fargate Profile default configurations
   * @default [object Object]
   */
  readonly fargateProfileDefaults?: any;
  /**
   * Map of Fargate Profile definitions to create
   * @default [object Object]
   */
  readonly fargateProfiles?: any;
  /**
   * Additional policies to be added to the IAM role
   * @default 
   */
  readonly iamRoleAdditionalPolicies?: string[];
  /**
   * Existing IAM role ARN for the cluster. Required if `create_iam_role` is set to `false`
   */
  readonly iamRoleArn?: string;
  /**
   * Description of the role
   */
  readonly iamRoleDescription?: string;
  /**
   * Name to use on IAM role created
   */
  readonly iamRoleName?: string;
  /**
   * Cluster IAM role path
   */
  readonly iamRolePath?: string;
  /**
   * ARN of the policy that is used to set the permissions boundary for the IAM role
   */
  readonly iamRolePermissionsBoundary?: string;
  /**
   * A map of additional tags to add to the IAM role created
   * @default [object Object]
   * The property type contains a map, they have special handling, please see {@link cdk.tf/module-map-inputs the docs}
   */
  readonly iamRoleTags?: { [key: string]: string };
  /**
   * Determines whether the IAM role name (`iam_role_name`) is used as a prefix
   * @default true
   */
  readonly iamRoleUseNamePrefix?: boolean;
  /**
   * A list of IAM ARNs for [key administrators](https://docs.aws.amazon.com/kms/latest/developerguide/key-policy-default.html#key-policy-default-allow-administrators). If no value is provided, the current caller identity is used to ensure at least one key admin is available
   * @default 
   */
  readonly kmsKeyAdministrators?: string[];
  /**
   * A list of aliases to create. Note - due to the use of `toset()`, values must be static strings and not computed values
   * @default 
   */
  readonly kmsKeyAliases?: string[];
  /**
   * The waiting period, specified in number of days. After the waiting period ends, AWS KMS deletes the KMS key. If you specify a value, it must be between `7` and `30`, inclusive. If you do not specify a value, it defaults to `30`
   */
  readonly kmsKeyDeletionWindowInDays?: number;
  /**
   * The description of the key as viewed in AWS console
   */
  readonly kmsKeyDescription?: string;
  /**
   * Specifies whether to enable the default key policy. Defaults to `false`
   */
  readonly kmsKeyEnableDefaultPolicy?: boolean;
  /**
   * List of IAM policy documents that are merged together into the exported document. In merging, statements with non-blank `sid`s will override statements with the same `sid`
   * @default 
   */
  readonly kmsKeyOverridePolicyDocuments?: string[];
  /**
   * A list of IAM ARNs for those who will have full key permissions (`kms:*`)
   * @default 
   */
  readonly kmsKeyOwners?: string[];
  /**
   * A list of IAM ARNs for [key service users](https://docs.aws.amazon.com/kms/latest/developerguide/key-policy-default.html#key-policy-service-integration)
   * @default 
   */
  readonly kmsKeyServiceUsers?: string[];
  /**
   * List of IAM policy documents that are merged together into the exported document. Statements must have unique `sid`s
   * @default 
   */
  readonly kmsKeySourcePolicyDocuments?: string[];
  /**
   * A list of IAM ARNs for [key users](https://docs.aws.amazon.com/kms/latest/developerguide/key-policy-default.html#key-policy-default-allow-users)
   * @default 
   */
  readonly kmsKeyUsers?: string[];
  /**
   * Determines whether to manage the aws-auth configmap
   */
  readonly manageAwsAuthConfigmap?: boolean;
  /**
   * List of additional security group rules to add to the node security group created. Set `source_cluster_security_group = true` inside rules to set the `cluster_security_group` as source
   * @default [object Object]
   */
  readonly nodeSecurityGroupAdditionalRules?: any;
  /**
   * Description of the node security group created
   * @default EKS node shared security group
   */
  readonly nodeSecurityGroupDescription?: string;
  /**
   * ID of an existing security group to attach to the node groups created
   */
  readonly nodeSecurityGroupId?: string;
  /**
   * Name to use on node security group created
   */
  readonly nodeSecurityGroupName?: string;
  /**
   * IPv4 CIDR block to allow NTP egress. Default is public IP space, but [Amazon Time Sync Service](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/set-time.html) can be used as well with `["169.254.169.123/32"]`
   * @default 0.0.0.0/0
   */
  readonly nodeSecurityGroupNtpIpv4CidrBlock?: string[];
  /**
   * IPv4 CIDR block to allow NTP egress. Default is public IP space, but [Amazon Time Sync Service](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/set-time.html) can be used as well with `["fd00:ec2::123/128"]`
   * @default ::/0
   */
  readonly nodeSecurityGroupNtpIpv6CidrBlock?: string[];
  /**
   * A map of additional tags to add to the node security group created
   * @default [object Object]
   * The property type contains a map, they have special handling, please see {@link cdk.tf/module-map-inputs the docs}
   */
  readonly nodeSecurityGroupTags?: { [key: string]: string };
  /**
   * Determines whether node security group name (`node_security_group_name`) is used as a prefix
   * @default true
   */
  readonly nodeSecurityGroupUseNamePrefix?: boolean;
  /**
   * List of OpenID Connect audience client IDs to add to the IRSA provider
   * @default 
   */
  readonly openidConnectAudiences?: string[];
  /**
   * The separator to use between the prefix and the generated timestamp for resource names
   * @default -
   */
  readonly prefixSeparator?: string;
  /**
   * Do you agree that Putin doesn't respect Ukrainian sovereignty and territorial integrity? More info: https://en.wikipedia.org/wiki/Putin_khuylo!
   * @default true
   */
  readonly putinKhuylo?: boolean;
  /**
   * Map of self-managed node group default configurations
   * @default [object Object]
   */
  readonly selfManagedNodeGroupDefaults?: any;
  /**
   * Map of self-managed node group definitions to create
   * @default [object Object]
   */
  readonly selfManagedNodeGroups?: any;
  /**
   * A list of subnet IDs where the nodes/node groups will be provisioned. If `control_plane_subnet_ids` is not provided, the EKS cluster control plane (ENIs) will be provisioned in these subnets
   * @default 
   */
  readonly subnetIds?: string[];
  /**
   * A map of tags to add to all resources
   * @default [object Object]
   * The property type contains a map, they have special handling, please see {@link cdk.tf/module-map-inputs the docs}
   */
  readonly tags?: { [key: string]: string };
  /**
   * ID of the VPC where the cluster and its nodes will be provisioned
   */
  readonly vpcId?: string;
}
export class Eks extends TerraformModule {
  private readonly inputs: { [name: string]: any } = { }
  public constructor(scope: Construct, id: string, options: EksOptions = {}) {
    super(scope, id, {
      ...options,
      source: 'terraform-aws-modules/eks/aws',
      version: '~> 18.0',
    });
    this.attachClusterEncryptionPolicy = options.attachClusterEncryptionPolicy;
    this.awsAuthAccounts = options.awsAuthAccounts;
    this.awsAuthFargateProfilePodExecutionRoleArns = options.awsAuthFargateProfilePodExecutionRoleArns;
    this.awsAuthNodeIamRoleArnsNonWindows = options.awsAuthNodeIamRoleArnsNonWindows;
    this.awsAuthNodeIamRoleArnsWindows = options.awsAuthNodeIamRoleArnsWindows;
    this.awsAuthRoles = options.awsAuthRoles;
    this.awsAuthUsers = options.awsAuthUsers;
    this.cloudwatchLogGroupKmsKeyId = options.cloudwatchLogGroupKmsKeyId;
    this.cloudwatchLogGroupRetentionInDays = options.cloudwatchLogGroupRetentionInDays;
    this.clusterAdditionalSecurityGroupIds = options.clusterAdditionalSecurityGroupIds;
    this.clusterAddons = options.clusterAddons;
    this.clusterEnabledLogTypes = options.clusterEnabledLogTypes;
    this.clusterEncryptionConfig = options.clusterEncryptionConfig;
    this.clusterEncryptionPolicyDescription = options.clusterEncryptionPolicyDescription;
    this.clusterEncryptionPolicyName = options.clusterEncryptionPolicyName;
    this.clusterEncryptionPolicyPath = options.clusterEncryptionPolicyPath;
    this.clusterEncryptionPolicyTags = options.clusterEncryptionPolicyTags;
    this.clusterEncryptionPolicyUseNamePrefix = options.clusterEncryptionPolicyUseNamePrefix;
    this.clusterEndpointPrivateAccess = options.clusterEndpointPrivateAccess;
    this.clusterEndpointPublicAccess = options.clusterEndpointPublicAccess;
    this.clusterEndpointPublicAccessCidrs = options.clusterEndpointPublicAccessCidrs;
    this.clusterIamRoleDnsSuffix = options.clusterIamRoleDnsSuffix;
    this.clusterIdentityProviders = options.clusterIdentityProviders;
    this.clusterIpFamily = options.clusterIpFamily;
    this.clusterName = options.clusterName;
    this.clusterSecurityGroupAdditionalRules = options.clusterSecurityGroupAdditionalRules;
    this.clusterSecurityGroupDescription = options.clusterSecurityGroupDescription;
    this.clusterSecurityGroupId = options.clusterSecurityGroupId;
    this.clusterSecurityGroupName = options.clusterSecurityGroupName;
    this.clusterSecurityGroupTags = options.clusterSecurityGroupTags;
    this.clusterSecurityGroupUseNamePrefix = options.clusterSecurityGroupUseNamePrefix;
    this.clusterServiceIpv4Cidr = options.clusterServiceIpv4Cidr;
    this.clusterTags = options.clusterTags;
    this.clusterTimeouts = options.clusterTimeouts;
    this.clusterVersion = options.clusterVersion;
    this.controlPlaneSubnetIds = options.controlPlaneSubnetIds;
    this.create = options.create;
    this.createAwsAuthConfigmap = options.createAwsAuthConfigmap;
    this.createCloudwatchLogGroup = options.createCloudwatchLogGroup;
    this.createClusterPrimarySecurityGroupTags = options.createClusterPrimarySecurityGroupTags;
    this.createClusterSecurityGroup = options.createClusterSecurityGroup;
    this.createCniIpv6IamPolicy = options.createCniIpv6IamPolicy;
    this.createIamRole = options.createIamRole;
    this.createKmsKey = options.createKmsKey;
    this.createNodeSecurityGroup = options.createNodeSecurityGroup;
    this.customOidcThumbprints = options.customOidcThumbprints;
    this.eksManagedNodeGroupDefaults = options.eksManagedNodeGroupDefaults;
    this.eksManagedNodeGroups = options.eksManagedNodeGroups;
    this.enableIrsa = options.enableIrsa;
    this.enableKmsKeyRotation = options.enableKmsKeyRotation;
    this.fargateProfileDefaults = options.fargateProfileDefaults;
    this.fargateProfiles = options.fargateProfiles;
    this.iamRoleAdditionalPolicies = options.iamRoleAdditionalPolicies;
    this.iamRoleArn = options.iamRoleArn;
    this.iamRoleDescription = options.iamRoleDescription;
    this.iamRoleName = options.iamRoleName;
    this.iamRolePath = options.iamRolePath;
    this.iamRolePermissionsBoundary = options.iamRolePermissionsBoundary;
    this.iamRoleTags = options.iamRoleTags;
    this.iamRoleUseNamePrefix = options.iamRoleUseNamePrefix;
    this.kmsKeyAdministrators = options.kmsKeyAdministrators;
    this.kmsKeyAliases = options.kmsKeyAliases;
    this.kmsKeyDeletionWindowInDays = options.kmsKeyDeletionWindowInDays;
    this.kmsKeyDescription = options.kmsKeyDescription;
    this.kmsKeyEnableDefaultPolicy = options.kmsKeyEnableDefaultPolicy;
    this.kmsKeyOverridePolicyDocuments = options.kmsKeyOverridePolicyDocuments;
    this.kmsKeyOwners = options.kmsKeyOwners;
    this.kmsKeyServiceUsers = options.kmsKeyServiceUsers;
    this.kmsKeySourcePolicyDocuments = options.kmsKeySourcePolicyDocuments;
    this.kmsKeyUsers = options.kmsKeyUsers;
    this.manageAwsAuthConfigmap = options.manageAwsAuthConfigmap;
    this.nodeSecurityGroupAdditionalRules = options.nodeSecurityGroupAdditionalRules;
    this.nodeSecurityGroupDescription = options.nodeSecurityGroupDescription;
    this.nodeSecurityGroupId = options.nodeSecurityGroupId;
    this.nodeSecurityGroupName = options.nodeSecurityGroupName;
    this.nodeSecurityGroupNtpIpv4CidrBlock = options.nodeSecurityGroupNtpIpv4CidrBlock;
    this.nodeSecurityGroupNtpIpv6CidrBlock = options.nodeSecurityGroupNtpIpv6CidrBlock;
    this.nodeSecurityGroupTags = options.nodeSecurityGroupTags;
    this.nodeSecurityGroupUseNamePrefix = options.nodeSecurityGroupUseNamePrefix;
    this.openidConnectAudiences = options.openidConnectAudiences;
    this.prefixSeparator = options.prefixSeparator;
    this.putinKhuylo = options.putinKhuylo;
    this.selfManagedNodeGroupDefaults = options.selfManagedNodeGroupDefaults;
    this.selfManagedNodeGroups = options.selfManagedNodeGroups;
    this.subnetIds = options.subnetIds;
    this.tags = options.tags;
    this.vpcId = options.vpcId;
  }
  public get attachClusterEncryptionPolicy(): boolean | undefined {
    return this.inputs['attach_cluster_encryption_policy'] as boolean | undefined;
  }
  public set attachClusterEncryptionPolicy(value: boolean | undefined) {
    this.inputs['attach_cluster_encryption_policy'] = value;
  }
  public get awsAuthAccounts(): any[] | undefined {
    return this.inputs['aws_auth_accounts'] as any[] | undefined;
  }
  public set awsAuthAccounts(value: any[] | undefined) {
    this.inputs['aws_auth_accounts'] = value;
  }
  public get awsAuthFargateProfilePodExecutionRoleArns(): string[] | undefined {
    return this.inputs['aws_auth_fargate_profile_pod_execution_role_arns'] as string[] | undefined;
  }
  public set awsAuthFargateProfilePodExecutionRoleArns(value: string[] | undefined) {
    this.inputs['aws_auth_fargate_profile_pod_execution_role_arns'] = value;
  }
  public get awsAuthNodeIamRoleArnsNonWindows(): string[] | undefined {
    return this.inputs['aws_auth_node_iam_role_arns_non_windows'] as string[] | undefined;
  }
  public set awsAuthNodeIamRoleArnsNonWindows(value: string[] | undefined) {
    this.inputs['aws_auth_node_iam_role_arns_non_windows'] = value;
  }
  public get awsAuthNodeIamRoleArnsWindows(): string[] | undefined {
    return this.inputs['aws_auth_node_iam_role_arns_windows'] as string[] | undefined;
  }
  public set awsAuthNodeIamRoleArnsWindows(value: string[] | undefined) {
    this.inputs['aws_auth_node_iam_role_arns_windows'] = value;
  }
  public get awsAuthRoles(): any[] | undefined {
    return this.inputs['aws_auth_roles'] as any[] | undefined;
  }
  public set awsAuthRoles(value: any[] | undefined) {
    this.inputs['aws_auth_roles'] = value;
  }
  public get awsAuthUsers(): any[] | undefined {
    return this.inputs['aws_auth_users'] as any[] | undefined;
  }
  public set awsAuthUsers(value: any[] | undefined) {
    this.inputs['aws_auth_users'] = value;
  }
  public get cloudwatchLogGroupKmsKeyId(): string | undefined {
    return this.inputs['cloudwatch_log_group_kms_key_id'] as string | undefined;
  }
  public set cloudwatchLogGroupKmsKeyId(value: string | undefined) {
    this.inputs['cloudwatch_log_group_kms_key_id'] = value;
  }
  public get cloudwatchLogGroupRetentionInDays(): number | undefined {
    return this.inputs['cloudwatch_log_group_retention_in_days'] as number | undefined;
  }
  public set cloudwatchLogGroupRetentionInDays(value: number | undefined) {
    this.inputs['cloudwatch_log_group_retention_in_days'] = value;
  }
  public get clusterAdditionalSecurityGroupIds(): string[] | undefined {
    return this.inputs['cluster_additional_security_group_ids'] as string[] | undefined;
  }
  public set clusterAdditionalSecurityGroupIds(value: string[] | undefined) {
    this.inputs['cluster_additional_security_group_ids'] = value;
  }
  public get clusterAddons(): any | undefined {
    return this.inputs['cluster_addons'] as any | undefined;
  }
  public set clusterAddons(value: any | undefined) {
    this.inputs['cluster_addons'] = value;
  }
  public get clusterEnabledLogTypes(): string[] | undefined {
    return this.inputs['cluster_enabled_log_types'] as string[] | undefined;
  }
  public set clusterEnabledLogTypes(value: string[] | undefined) {
    this.inputs['cluster_enabled_log_types'] = value;
  }
  public get clusterEncryptionConfig(): any[] | undefined {
    return this.inputs['cluster_encryption_config'] as any[] | undefined;
  }
  public set clusterEncryptionConfig(value: any[] | undefined) {
    this.inputs['cluster_encryption_config'] = value;
  }
  public get clusterEncryptionPolicyDescription(): string | undefined {
    return this.inputs['cluster_encryption_policy_description'] as string | undefined;
  }
  public set clusterEncryptionPolicyDescription(value: string | undefined) {
    this.inputs['cluster_encryption_policy_description'] = value;
  }
  public get clusterEncryptionPolicyName(): string | undefined {
    return this.inputs['cluster_encryption_policy_name'] as string | undefined;
  }
  public set clusterEncryptionPolicyName(value: string | undefined) {
    this.inputs['cluster_encryption_policy_name'] = value;
  }
  public get clusterEncryptionPolicyPath(): string | undefined {
    return this.inputs['cluster_encryption_policy_path'] as string | undefined;
  }
  public set clusterEncryptionPolicyPath(value: string | undefined) {
    this.inputs['cluster_encryption_policy_path'] = value;
  }
  public get clusterEncryptionPolicyTags(): { [key: string]: string } | undefined {
    return this.inputs['cluster_encryption_policy_tags'] as { [key: string]: string } | undefined;
  }
  public set clusterEncryptionPolicyTags(value: { [key: string]: string } | undefined) {
    this.inputs['cluster_encryption_policy_tags'] = value;
  }
  public get clusterEncryptionPolicyUseNamePrefix(): boolean | undefined {
    return this.inputs['cluster_encryption_policy_use_name_prefix'] as boolean | undefined;
  }
  public set clusterEncryptionPolicyUseNamePrefix(value: boolean | undefined) {
    this.inputs['cluster_encryption_policy_use_name_prefix'] = value;
  }
  public get clusterEndpointPrivateAccess(): boolean | undefined {
    return this.inputs['cluster_endpoint_private_access'] as boolean | undefined;
  }
  public set clusterEndpointPrivateAccess(value: boolean | undefined) {
    this.inputs['cluster_endpoint_private_access'] = value;
  }
  public get clusterEndpointPublicAccess(): boolean | undefined {
    return this.inputs['cluster_endpoint_public_access'] as boolean | undefined;
  }
  public set clusterEndpointPublicAccess(value: boolean | undefined) {
    this.inputs['cluster_endpoint_public_access'] = value;
  }
  public get clusterEndpointPublicAccessCidrs(): string[] | undefined {
    return this.inputs['cluster_endpoint_public_access_cidrs'] as string[] | undefined;
  }
  public set clusterEndpointPublicAccessCidrs(value: string[] | undefined) {
    this.inputs['cluster_endpoint_public_access_cidrs'] = value;
  }
  public get clusterIamRoleDnsSuffix(): string | undefined {
    return this.inputs['cluster_iam_role_dns_suffix'] as string | undefined;
  }
  public set clusterIamRoleDnsSuffix(value: string | undefined) {
    this.inputs['cluster_iam_role_dns_suffix'] = value;
  }
  public get clusterIdentityProviders(): any | undefined {
    return this.inputs['cluster_identity_providers'] as any | undefined;
  }
  public set clusterIdentityProviders(value: any | undefined) {
    this.inputs['cluster_identity_providers'] = value;
  }
  public get clusterIpFamily(): string | undefined {
    return this.inputs['cluster_ip_family'] as string | undefined;
  }
  public set clusterIpFamily(value: string | undefined) {
    this.inputs['cluster_ip_family'] = value;
  }
  public get clusterName(): string | undefined {
    return this.inputs['cluster_name'] as string | undefined;
  }
  public set clusterName(value: string | undefined) {
    this.inputs['cluster_name'] = value;
  }
  public get clusterSecurityGroupAdditionalRules(): any | undefined {
    return this.inputs['cluster_security_group_additional_rules'] as any | undefined;
  }
  public set clusterSecurityGroupAdditionalRules(value: any | undefined) {
    this.inputs['cluster_security_group_additional_rules'] = value;
  }
  public get clusterSecurityGroupDescription(): string | undefined {
    return this.inputs['cluster_security_group_description'] as string | undefined;
  }
  public set clusterSecurityGroupDescription(value: string | undefined) {
    this.inputs['cluster_security_group_description'] = value;
  }
  public get clusterSecurityGroupId(): string | undefined {
    return this.inputs['cluster_security_group_id'] as string | undefined;
  }
  public set clusterSecurityGroupId(value: string | undefined) {
    this.inputs['cluster_security_group_id'] = value;
  }
  public get clusterSecurityGroupName(): string | undefined {
    return this.inputs['cluster_security_group_name'] as string | undefined;
  }
  public set clusterSecurityGroupName(value: string | undefined) {
    this.inputs['cluster_security_group_name'] = value;
  }
  public get clusterSecurityGroupTags(): { [key: string]: string } | undefined {
    return this.inputs['cluster_security_group_tags'] as { [key: string]: string } | undefined;
  }
  public set clusterSecurityGroupTags(value: { [key: string]: string } | undefined) {
    this.inputs['cluster_security_group_tags'] = value;
  }
  public get clusterSecurityGroupUseNamePrefix(): boolean | undefined {
    return this.inputs['cluster_security_group_use_name_prefix'] as boolean | undefined;
  }
  public set clusterSecurityGroupUseNamePrefix(value: boolean | undefined) {
    this.inputs['cluster_security_group_use_name_prefix'] = value;
  }
  public get clusterServiceIpv4Cidr(): string | undefined {
    return this.inputs['cluster_service_ipv4_cidr'] as string | undefined;
  }
  public set clusterServiceIpv4Cidr(value: string | undefined) {
    this.inputs['cluster_service_ipv4_cidr'] = value;
  }
  public get clusterTags(): { [key: string]: string } | undefined {
    return this.inputs['cluster_tags'] as { [key: string]: string } | undefined;
  }
  public set clusterTags(value: { [key: string]: string } | undefined) {
    this.inputs['cluster_tags'] = value;
  }
  public get clusterTimeouts(): { [key: string]: string } | undefined {
    return this.inputs['cluster_timeouts'] as { [key: string]: string } | undefined;
  }
  public set clusterTimeouts(value: { [key: string]: string } | undefined) {
    this.inputs['cluster_timeouts'] = value;
  }
  public get clusterVersion(): string | undefined {
    return this.inputs['cluster_version'] as string | undefined;
  }
  public set clusterVersion(value: string | undefined) {
    this.inputs['cluster_version'] = value;
  }
  public get controlPlaneSubnetIds(): string[] | undefined {
    return this.inputs['control_plane_subnet_ids'] as string[] | undefined;
  }
  public set controlPlaneSubnetIds(value: string[] | undefined) {
    this.inputs['control_plane_subnet_ids'] = value;
  }
  public get create(): boolean | undefined {
    return this.inputs['create'] as boolean | undefined;
  }
  public set create(value: boolean | undefined) {
    this.inputs['create'] = value;
  }
  public get createAwsAuthConfigmap(): boolean | undefined {
    return this.inputs['create_aws_auth_configmap'] as boolean | undefined;
  }
  public set createAwsAuthConfigmap(value: boolean | undefined) {
    this.inputs['create_aws_auth_configmap'] = value;
  }
  public get createCloudwatchLogGroup(): boolean | undefined {
    return this.inputs['create_cloudwatch_log_group'] as boolean | undefined;
  }
  public set createCloudwatchLogGroup(value: boolean | undefined) {
    this.inputs['create_cloudwatch_log_group'] = value;
  }
  public get createClusterPrimarySecurityGroupTags(): boolean | undefined {
    return this.inputs['create_cluster_primary_security_group_tags'] as boolean | undefined;
  }
  public set createClusterPrimarySecurityGroupTags(value: boolean | undefined) {
    this.inputs['create_cluster_primary_security_group_tags'] = value;
  }
  public get createClusterSecurityGroup(): boolean | undefined {
    return this.inputs['create_cluster_security_group'] as boolean | undefined;
  }
  public set createClusterSecurityGroup(value: boolean | undefined) {
    this.inputs['create_cluster_security_group'] = value;
  }
  public get createCniIpv6IamPolicy(): boolean | undefined {
    return this.inputs['create_cni_ipv6_iam_policy'] as boolean | undefined;
  }
  public set createCniIpv6IamPolicy(value: boolean | undefined) {
    this.inputs['create_cni_ipv6_iam_policy'] = value;
  }
  public get createIamRole(): boolean | undefined {
    return this.inputs['create_iam_role'] as boolean | undefined;
  }
  public set createIamRole(value: boolean | undefined) {
    this.inputs['create_iam_role'] = value;
  }
  public get createKmsKey(): boolean | undefined {
    return this.inputs['create_kms_key'] as boolean | undefined;
  }
  public set createKmsKey(value: boolean | undefined) {
    this.inputs['create_kms_key'] = value;
  }
  public get createNodeSecurityGroup(): boolean | undefined {
    return this.inputs['create_node_security_group'] as boolean | undefined;
  }
  public set createNodeSecurityGroup(value: boolean | undefined) {
    this.inputs['create_node_security_group'] = value;
  }
  public get customOidcThumbprints(): string[] | undefined {
    return this.inputs['custom_oidc_thumbprints'] as string[] | undefined;
  }
  public set customOidcThumbprints(value: string[] | undefined) {
    this.inputs['custom_oidc_thumbprints'] = value;
  }
  public get eksManagedNodeGroupDefaults(): any | undefined {
    return this.inputs['eks_managed_node_group_defaults'] as any | undefined;
  }
  public set eksManagedNodeGroupDefaults(value: any | undefined) {
    this.inputs['eks_managed_node_group_defaults'] = value;
  }
  public get eksManagedNodeGroups(): any | undefined {
    return this.inputs['eks_managed_node_groups'] as any | undefined;
  }
  public set eksManagedNodeGroups(value: any | undefined) {
    this.inputs['eks_managed_node_groups'] = value;
  }
  public get enableIrsa(): boolean | undefined {
    return this.inputs['enable_irsa'] as boolean | undefined;
  }
  public set enableIrsa(value: boolean | undefined) {
    this.inputs['enable_irsa'] = value;
  }
  public get enableKmsKeyRotation(): boolean | undefined {
    return this.inputs['enable_kms_key_rotation'] as boolean | undefined;
  }
  public set enableKmsKeyRotation(value: boolean | undefined) {
    this.inputs['enable_kms_key_rotation'] = value;
  }
  public get fargateProfileDefaults(): any | undefined {
    return this.inputs['fargate_profile_defaults'] as any | undefined;
  }
  public set fargateProfileDefaults(value: any | undefined) {
    this.inputs['fargate_profile_defaults'] = value;
  }
  public get fargateProfiles(): any | undefined {
    return this.inputs['fargate_profiles'] as any | undefined;
  }
  public set fargateProfiles(value: any | undefined) {
    this.inputs['fargate_profiles'] = value;
  }
  public get iamRoleAdditionalPolicies(): string[] | undefined {
    return this.inputs['iam_role_additional_policies'] as string[] | undefined;
  }
  public set iamRoleAdditionalPolicies(value: string[] | undefined) {
    this.inputs['iam_role_additional_policies'] = value;
  }
  public get iamRoleArn(): string | undefined {
    return this.inputs['iam_role_arn'] as string | undefined;
  }
  public set iamRoleArn(value: string | undefined) {
    this.inputs['iam_role_arn'] = value;
  }
  public get iamRoleDescription(): string | undefined {
    return this.inputs['iam_role_description'] as string | undefined;
  }
  public set iamRoleDescription(value: string | undefined) {
    this.inputs['iam_role_description'] = value;
  }
  public get iamRoleName(): string | undefined {
    return this.inputs['iam_role_name'] as string | undefined;
  }
  public set iamRoleName(value: string | undefined) {
    this.inputs['iam_role_name'] = value;
  }
  public get iamRolePath(): string | undefined {
    return this.inputs['iam_role_path'] as string | undefined;
  }
  public set iamRolePath(value: string | undefined) {
    this.inputs['iam_role_path'] = value;
  }
  public get iamRolePermissionsBoundary(): string | undefined {
    return this.inputs['iam_role_permissions_boundary'] as string | undefined;
  }
  public set iamRolePermissionsBoundary(value: string | undefined) {
    this.inputs['iam_role_permissions_boundary'] = value;
  }
  public get iamRoleTags(): { [key: string]: string } | undefined {
    return this.inputs['iam_role_tags'] as { [key: string]: string } | undefined;
  }
  public set iamRoleTags(value: { [key: string]: string } | undefined) {
    this.inputs['iam_role_tags'] = value;
  }
  public get iamRoleUseNamePrefix(): boolean | undefined {
    return this.inputs['iam_role_use_name_prefix'] as boolean | undefined;
  }
  public set iamRoleUseNamePrefix(value: boolean | undefined) {
    this.inputs['iam_role_use_name_prefix'] = value;
  }
  public get kmsKeyAdministrators(): string[] | undefined {
    return this.inputs['kms_key_administrators'] as string[] | undefined;
  }
  public set kmsKeyAdministrators(value: string[] | undefined) {
    this.inputs['kms_key_administrators'] = value;
  }
  public get kmsKeyAliases(): string[] | undefined {
    return this.inputs['kms_key_aliases'] as string[] | undefined;
  }
  public set kmsKeyAliases(value: string[] | undefined) {
    this.inputs['kms_key_aliases'] = value;
  }
  public get kmsKeyDeletionWindowInDays(): number | undefined {
    return this.inputs['kms_key_deletion_window_in_days'] as number | undefined;
  }
  public set kmsKeyDeletionWindowInDays(value: number | undefined) {
    this.inputs['kms_key_deletion_window_in_days'] = value;
  }
  public get kmsKeyDescription(): string | undefined {
    return this.inputs['kms_key_description'] as string | undefined;
  }
  public set kmsKeyDescription(value: string | undefined) {
    this.inputs['kms_key_description'] = value;
  }
  public get kmsKeyEnableDefaultPolicy(): boolean | undefined {
    return this.inputs['kms_key_enable_default_policy'] as boolean | undefined;
  }
  public set kmsKeyEnableDefaultPolicy(value: boolean | undefined) {
    this.inputs['kms_key_enable_default_policy'] = value;
  }
  public get kmsKeyOverridePolicyDocuments(): string[] | undefined {
    return this.inputs['kms_key_override_policy_documents'] as string[] | undefined;
  }
  public set kmsKeyOverridePolicyDocuments(value: string[] | undefined) {
    this.inputs['kms_key_override_policy_documents'] = value;
  }
  public get kmsKeyOwners(): string[] | undefined {
    return this.inputs['kms_key_owners'] as string[] | undefined;
  }
  public set kmsKeyOwners(value: string[] | undefined) {
    this.inputs['kms_key_owners'] = value;
  }
  public get kmsKeyServiceUsers(): string[] | undefined {
    return this.inputs['kms_key_service_users'] as string[] | undefined;
  }
  public set kmsKeyServiceUsers(value: string[] | undefined) {
    this.inputs['kms_key_service_users'] = value;
  }
  public get kmsKeySourcePolicyDocuments(): string[] | undefined {
    return this.inputs['kms_key_source_policy_documents'] as string[] | undefined;
  }
  public set kmsKeySourcePolicyDocuments(value: string[] | undefined) {
    this.inputs['kms_key_source_policy_documents'] = value;
  }
  public get kmsKeyUsers(): string[] | undefined {
    return this.inputs['kms_key_users'] as string[] | undefined;
  }
  public set kmsKeyUsers(value: string[] | undefined) {
    this.inputs['kms_key_users'] = value;
  }
  public get manageAwsAuthConfigmap(): boolean | undefined {
    return this.inputs['manage_aws_auth_configmap'] as boolean | undefined;
  }
  public set manageAwsAuthConfigmap(value: boolean | undefined) {
    this.inputs['manage_aws_auth_configmap'] = value;
  }
  public get nodeSecurityGroupAdditionalRules(): any | undefined {
    return this.inputs['node_security_group_additional_rules'] as any | undefined;
  }
  public set nodeSecurityGroupAdditionalRules(value: any | undefined) {
    this.inputs['node_security_group_additional_rules'] = value;
  }
  public get nodeSecurityGroupDescription(): string | undefined {
    return this.inputs['node_security_group_description'] as string | undefined;
  }
  public set nodeSecurityGroupDescription(value: string | undefined) {
    this.inputs['node_security_group_description'] = value;
  }
  public get nodeSecurityGroupId(): string | undefined {
    return this.inputs['node_security_group_id'] as string | undefined;
  }
  public set nodeSecurityGroupId(value: string | undefined) {
    this.inputs['node_security_group_id'] = value;
  }
  public get nodeSecurityGroupName(): string | undefined {
    return this.inputs['node_security_group_name'] as string | undefined;
  }
  public set nodeSecurityGroupName(value: string | undefined) {
    this.inputs['node_security_group_name'] = value;
  }
  public get nodeSecurityGroupNtpIpv4CidrBlock(): string[] | undefined {
    return this.inputs['node_security_group_ntp_ipv4_cidr_block'] as string[] | undefined;
  }
  public set nodeSecurityGroupNtpIpv4CidrBlock(value: string[] | undefined) {
    this.inputs['node_security_group_ntp_ipv4_cidr_block'] = value;
  }
  public get nodeSecurityGroupNtpIpv6CidrBlock(): string[] | undefined {
    return this.inputs['node_security_group_ntp_ipv6_cidr_block'] as string[] | undefined;
  }
  public set nodeSecurityGroupNtpIpv6CidrBlock(value: string[] | undefined) {
    this.inputs['node_security_group_ntp_ipv6_cidr_block'] = value;
  }
  public get nodeSecurityGroupTags(): { [key: string]: string } | undefined {
    return this.inputs['node_security_group_tags'] as { [key: string]: string } | undefined;
  }
  public set nodeSecurityGroupTags(value: { [key: string]: string } | undefined) {
    this.inputs['node_security_group_tags'] = value;
  }
  public get nodeSecurityGroupUseNamePrefix(): boolean | undefined {
    return this.inputs['node_security_group_use_name_prefix'] as boolean | undefined;
  }
  public set nodeSecurityGroupUseNamePrefix(value: boolean | undefined) {
    this.inputs['node_security_group_use_name_prefix'] = value;
  }
  public get openidConnectAudiences(): string[] | undefined {
    return this.inputs['openid_connect_audiences'] as string[] | undefined;
  }
  public set openidConnectAudiences(value: string[] | undefined) {
    this.inputs['openid_connect_audiences'] = value;
  }
  public get prefixSeparator(): string | undefined {
    return this.inputs['prefix_separator'] as string | undefined;
  }
  public set prefixSeparator(value: string | undefined) {
    this.inputs['prefix_separator'] = value;
  }
  public get putinKhuylo(): boolean | undefined {
    return this.inputs['putin_khuylo'] as boolean | undefined;
  }
  public set putinKhuylo(value: boolean | undefined) {
    this.inputs['putin_khuylo'] = value;
  }
  public get selfManagedNodeGroupDefaults(): any | undefined {
    return this.inputs['self_managed_node_group_defaults'] as any | undefined;
  }
  public set selfManagedNodeGroupDefaults(value: any | undefined) {
    this.inputs['self_managed_node_group_defaults'] = value;
  }
  public get selfManagedNodeGroups(): any | undefined {
    return this.inputs['self_managed_node_groups'] as any | undefined;
  }
  public set selfManagedNodeGroups(value: any | undefined) {
    this.inputs['self_managed_node_groups'] = value;
  }
  public get subnetIds(): string[] | undefined {
    return this.inputs['subnet_ids'] as string[] | undefined;
  }
  public set subnetIds(value: string[] | undefined) {
    this.inputs['subnet_ids'] = value;
  }
  public get tags(): { [key: string]: string } | undefined {
    return this.inputs['tags'] as { [key: string]: string } | undefined;
  }
  public set tags(value: { [key: string]: string } | undefined) {
    this.inputs['tags'] = value;
  }
  public get vpcId(): string | undefined {
    return this.inputs['vpc_id'] as string | undefined;
  }
  public set vpcId(value: string | undefined) {
    this.inputs['vpc_id'] = value;
  }
  public get awsAuthConfigmapYamlOutput() {
    return this.getString('aws_auth_configmap_yaml')
  }
  public get cloudwatchLogGroupArnOutput() {
    return this.getString('cloudwatch_log_group_arn')
  }
  public get cloudwatchLogGroupNameOutput() {
    return this.getString('cloudwatch_log_group_name')
  }
  public get clusterAddonsOutput() {
    return this.getString('cluster_addons')
  }
  public get clusterArnOutput() {
    return this.getString('cluster_arn')
  }
  public get clusterCertificateAuthorityDataOutput() {
    return this.getString('cluster_certificate_authority_data')
  }
  public get clusterEndpointOutput() {
    return this.getString('cluster_endpoint')
  }
  public get clusterIamRoleArnOutput() {
    return this.getString('cluster_iam_role_arn')
  }
  public get clusterIamRoleNameOutput() {
    return this.getString('cluster_iam_role_name')
  }
  public get clusterIamRoleUniqueIdOutput() {
    return this.getString('cluster_iam_role_unique_id')
  }
  public get clusterIdOutput() {
    return this.getString('cluster_id')
  }
  public get clusterIdentityProvidersOutput() {
    return this.getString('cluster_identity_providers')
  }
  public get clusterOidcIssuerUrlOutput() {
    return this.getString('cluster_oidc_issuer_url')
  }
  public get clusterPlatformVersionOutput() {
    return this.getString('cluster_platform_version')
  }
  public get clusterPrimarySecurityGroupIdOutput() {
    return this.getString('cluster_primary_security_group_id')
  }
  public get clusterSecurityGroupArnOutput() {
    return this.getString('cluster_security_group_arn')
  }
  public get clusterSecurityGroupIdOutput() {
    return this.getString('cluster_security_group_id')
  }
  public get clusterStatusOutput() {
    return this.getString('cluster_status')
  }
  public get clusterTlsCertificateSha1FingerprintOutput() {
    return this.getString('cluster_tls_certificate_sha1_fingerprint')
  }
  public get clusterVersionOutput() {
    return this.getString('cluster_version')
  }
  public get eksManagedNodeGroupsOutput() {
    return this.getString('eks_managed_node_groups')
  }
  public get eksManagedNodeGroupsAutoscalingGroupNamesOutput() {
    return this.getString('eks_managed_node_groups_autoscaling_group_names')
  }
  public get fargateProfilesOutput() {
    return this.getString('fargate_profiles')
  }
  public get kmsKeyArnOutput() {
    return this.getString('kms_key_arn')
  }
  public get kmsKeyIdOutput() {
    return this.getString('kms_key_id')
  }
  public get kmsKeyPolicyOutput() {
    return this.getString('kms_key_policy')
  }
  public get nodeSecurityGroupArnOutput() {
    return this.getString('node_security_group_arn')
  }
  public get nodeSecurityGroupIdOutput() {
    return this.getString('node_security_group_id')
  }
  public get oidcProviderOutput() {
    return this.getString('oidc_provider')
  }
  public get oidcProviderArnOutput() {
    return this.getString('oidc_provider_arn')
  }
  public get selfManagedNodeGroupsOutput() {
    return this.getString('self_managed_node_groups')
  }
  public get selfManagedNodeGroupsAutoscalingGroupNamesOutput() {
    return this.getString('self_managed_node_groups_autoscaling_group_names')
  }
  protected synthesizeAttributes() {
    return this.inputs;
  }
}
